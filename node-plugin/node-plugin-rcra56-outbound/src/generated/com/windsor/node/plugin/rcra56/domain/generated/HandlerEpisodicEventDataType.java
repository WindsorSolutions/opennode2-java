//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.02.26 at 10:48:23 AM EST 
//


package com.windsor.node.plugin.rcra56.domain.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDate;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Episodic event describing the handler's episodic event streams.
 * 
 * <p>Java class for HandlerEpisodicEventDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="HandlerEpisodicEventDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}TransactionCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}EpisodicEventOwner" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}EpisodicEventType" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}EpisodicEventOtherDescription" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}Contact" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}EpisodicEventStartDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}EpisodicEventEndDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}EpisodicWaste" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HandlerEpisodicEventDataType", namespace = "http://www.exchangenetwork.net/schema/RCRA/5", propOrder = {
    "transactionCode",
    "episodicEventOwner",
    "episodicEventType",
    "episodicEventOtherDescription",
    "contact",
    "episodicEventStartDate",
    "episodicEventEndDate",
    "episodicWaste"
})
@Entity(name = "HandlerEpisodicEventDataType")
@Table(name = "RCRA_HANDLEREPISODICEVENT")
@Inheritance(strategy = InheritanceType.JOINED)
public class HandlerEpisodicEventDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "TransactionCode", namespace = "http://www.exchangenetwork.net/schema/RCRA/5")
    protected String transactionCode;
    @XmlElement(name = "EpisodicEventOwner", namespace = "http://www.exchangenetwork.net/schema/RCRA/5")
    protected String episodicEventOwner;
    @XmlElement(name = "EpisodicEventType", namespace = "http://www.exchangenetwork.net/schema/RCRA/5")
    protected String episodicEventType;
    @XmlElement(name = "EpisodicEventOtherDescription", namespace = "http://www.exchangenetwork.net/schema/RCRA/5")
    protected String episodicEventOtherDescription;
    @XmlElement(name = "Contact", namespace = "http://www.exchangenetwork.net/schema/RCRA/5")
    protected ContactDataType contact;
    @XmlElement(name = "EpisodicEventStartDate", namespace = "http://www.exchangenetwork.net/schema/RCRA/5")
    protected XMLGregorianCalendar episodicEventStartDate;
    @XmlElement(name = "EpisodicEventEndDate", namespace = "http://www.exchangenetwork.net/schema/RCRA/5")
    protected XMLGregorianCalendar episodicEventEndDate;
    @XmlElement(name = "EpisodicWaste", namespace = "http://www.exchangenetwork.net/schema/RCRA/5")
    protected List<EpisodicWasteDataType> episodicWaste;
    @XmlTransient
    protected Long id;

    /**
     * Gets the value of the transactionCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRANSACTIONCODE", length = 1)
    public String getTransactionCode() {
        return transactionCode;
    }

    /**
     * Sets the value of the transactionCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionCode(String value) {
        this.transactionCode = value;
    }

    @Transient
    public boolean isSetTransactionCode() {
        return (this.transactionCode!= null);
    }

    /**
     * Gets the value of the episodicEventOwner property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EPISODICEVENTOWNR", length = 2)
    public String getEpisodicEventOwner() {
        return episodicEventOwner;
    }

    /**
     * Sets the value of the episodicEventOwner property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEpisodicEventOwner(String value) {
        this.episodicEventOwner = value;
    }

    @Transient
    public boolean isSetEpisodicEventOwner() {
        return (this.episodicEventOwner!= null);
    }

    /**
     * Gets the value of the episodicEventType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EPISODICEVENTTYPE", length = 3)
    public String getEpisodicEventType() {
        return episodicEventType;
    }

    /**
     * Sets the value of the episodicEventType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEpisodicEventType(String value) {
        this.episodicEventType = value;
    }

    @Transient
    public boolean isSetEpisodicEventType() {
        return (this.episodicEventType!= null);
    }

    /**
     * Gets the value of the episodicEventOtherDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EPISODICEVENTOTHERDESC", length = 80)
    public String getEpisodicEventOtherDescription() {
        return episodicEventOtherDescription;
    }

    /**
     * Sets the value of the episodicEventOtherDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEpisodicEventOtherDescription(String value) {
        this.episodicEventOtherDescription = value;
    }

    @Transient
    public boolean isSetEpisodicEventOtherDescription() {
        return (this.episodicEventOtherDescription!= null);
    }

    /**
     * Gets the value of the contact property.
     * 
     * @return
     *     possible object is
     *     {@link ContactDataType }
     *     
     */
    @OneToOne(targetEntity = ContactDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTACTID")
    public ContactDataType getContact() {
        return contact;
    }

    /**
     * Sets the value of the contact property.
     * 
     * @param value
     *     allowed object is
     *     {@link ContactDataType }
     *     
     */
    public void setContact(ContactDataType value) {
        this.contact = value;
    }

    @Transient
    public boolean isSetContact() {
        return (this.contact!= null);
    }

    /**
     * Gets the value of the episodicEventStartDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getEpisodicEventStartDate() {
        return episodicEventStartDate;
    }

    /**
     * Sets the value of the episodicEventStartDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEpisodicEventStartDate(XMLGregorianCalendar value) {
        this.episodicEventStartDate = value;
    }

    @Transient
    public boolean isSetEpisodicEventStartDate() {
        return (this.episodicEventStartDate!= null);
    }

    /**
     * Gets the value of the episodicEventEndDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getEpisodicEventEndDate() {
        return episodicEventEndDate;
    }

    /**
     * Sets the value of the episodicEventEndDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEpisodicEventEndDate(XMLGregorianCalendar value) {
        this.episodicEventEndDate = value;
    }

    @Transient
    public boolean isSetEpisodicEventEndDate() {
        return (this.episodicEventEndDate!= null);
    }

    /**
     * Gets the value of the episodicWaste property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the episodicWaste property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEpisodicWaste().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EpisodicWasteDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = EpisodicWasteDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HANDLEREPISODICEVENTID")
    public List<EpisodicWasteDataType> getEpisodicWaste() {
        if (episodicWaste == null) {
            episodicWaste = new ArrayList<EpisodicWasteDataType>();
        }
        return this.episodicWaste;
    }

    /**
     * 
     * 
     */
    public void setEpisodicWaste(List<EpisodicWasteDataType> episodicWaste) {
        this.episodicWaste = episodicWaste;
    }

    @Transient
    public boolean isSetEpisodicWaste() {
        return ((this.episodicWaste!= null)&&(!this.episodicWaste.isEmpty()));
    }

    public void unsetEpisodicWaste() {
        this.episodicWaste = null;
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "ID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getID() {
        return id;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setID(Long value) {
        this.id = value;
    }

    @Basic
    @Column(name = "EPISODICEVENTSTARTDATEITEM")
    @Temporal(TemporalType.DATE)
    public Date getEpisodicEventStartDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getEpisodicEventStartDate());
    }

    public void setEpisodicEventStartDateItem(Date target) {
        setEpisodicEventStartDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    @Basic
    @Column(name = "EPISODICEVENTENDDATEITEM")
    @Temporal(TemporalType.DATE)
    public Date getEpisodicEventEndDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getEpisodicEventEndDate());
    }

    public void setEpisodicEventEndDateItem(Date target) {
        setEpisodicEventEndDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof HandlerEpisodicEventDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final HandlerEpisodicEventDataType that = ((HandlerEpisodicEventDataType) object);
        {
            String lhsTransactionCode;
            lhsTransactionCode = this.getTransactionCode();
            String rhsTransactionCode;
            rhsTransactionCode = that.getTransactionCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionCode", lhsTransactionCode), LocatorUtils.property(thatLocator, "transactionCode", rhsTransactionCode), lhsTransactionCode, rhsTransactionCode)) {
                return false;
            }
        }
        {
            String lhsEpisodicEventOwner;
            lhsEpisodicEventOwner = this.getEpisodicEventOwner();
            String rhsEpisodicEventOwner;
            rhsEpisodicEventOwner = that.getEpisodicEventOwner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "episodicEventOwner", lhsEpisodicEventOwner), LocatorUtils.property(thatLocator, "episodicEventOwner", rhsEpisodicEventOwner), lhsEpisodicEventOwner, rhsEpisodicEventOwner)) {
                return false;
            }
        }
        {
            String lhsEpisodicEventType;
            lhsEpisodicEventType = this.getEpisodicEventType();
            String rhsEpisodicEventType;
            rhsEpisodicEventType = that.getEpisodicEventType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "episodicEventType", lhsEpisodicEventType), LocatorUtils.property(thatLocator, "episodicEventType", rhsEpisodicEventType), lhsEpisodicEventType, rhsEpisodicEventType)) {
                return false;
            }
        }
        {
            String lhsEpisodicEventOtherDescription;
            lhsEpisodicEventOtherDescription = this.getEpisodicEventOtherDescription();
            String rhsEpisodicEventOtherDescription;
            rhsEpisodicEventOtherDescription = that.getEpisodicEventOtherDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "episodicEventOtherDescription", lhsEpisodicEventOtherDescription), LocatorUtils.property(thatLocator, "episodicEventOtherDescription", rhsEpisodicEventOtherDescription), lhsEpisodicEventOtherDescription, rhsEpisodicEventOtherDescription)) {
                return false;
            }
        }
        {
            ContactDataType lhsContact;
            lhsContact = this.getContact();
            ContactDataType rhsContact;
            rhsContact = that.getContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contact", lhsContact), LocatorUtils.property(thatLocator, "contact", rhsContact), lhsContact, rhsContact)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEpisodicEventStartDate;
            lhsEpisodicEventStartDate = this.getEpisodicEventStartDate();
            XMLGregorianCalendar rhsEpisodicEventStartDate;
            rhsEpisodicEventStartDate = that.getEpisodicEventStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "episodicEventStartDate", lhsEpisodicEventStartDate), LocatorUtils.property(thatLocator, "episodicEventStartDate", rhsEpisodicEventStartDate), lhsEpisodicEventStartDate, rhsEpisodicEventStartDate)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEpisodicEventEndDate;
            lhsEpisodicEventEndDate = this.getEpisodicEventEndDate();
            XMLGregorianCalendar rhsEpisodicEventEndDate;
            rhsEpisodicEventEndDate = that.getEpisodicEventEndDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "episodicEventEndDate", lhsEpisodicEventEndDate), LocatorUtils.property(thatLocator, "episodicEventEndDate", rhsEpisodicEventEndDate), lhsEpisodicEventEndDate, rhsEpisodicEventEndDate)) {
                return false;
            }
        }
        {
            List<EpisodicWasteDataType> lhsEpisodicWaste;
            lhsEpisodicWaste = (this.isSetEpisodicWaste()?this.getEpisodicWaste():null);
            List<EpisodicWasteDataType> rhsEpisodicWaste;
            rhsEpisodicWaste = (that.isSetEpisodicWaste()?that.getEpisodicWaste():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "episodicWaste", lhsEpisodicWaste), LocatorUtils.property(thatLocator, "episodicWaste", rhsEpisodicWaste), lhsEpisodicWaste, rhsEpisodicWaste)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theTransactionCode;
            theTransactionCode = this.getTransactionCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionCode", theTransactionCode), currentHashCode, theTransactionCode);
        }
        {
            String theEpisodicEventOwner;
            theEpisodicEventOwner = this.getEpisodicEventOwner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "episodicEventOwner", theEpisodicEventOwner), currentHashCode, theEpisodicEventOwner);
        }
        {
            String theEpisodicEventType;
            theEpisodicEventType = this.getEpisodicEventType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "episodicEventType", theEpisodicEventType), currentHashCode, theEpisodicEventType);
        }
        {
            String theEpisodicEventOtherDescription;
            theEpisodicEventOtherDescription = this.getEpisodicEventOtherDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "episodicEventOtherDescription", theEpisodicEventOtherDescription), currentHashCode, theEpisodicEventOtherDescription);
        }
        {
            ContactDataType theContact;
            theContact = this.getContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contact", theContact), currentHashCode, theContact);
        }
        {
            XMLGregorianCalendar theEpisodicEventStartDate;
            theEpisodicEventStartDate = this.getEpisodicEventStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "episodicEventStartDate", theEpisodicEventStartDate), currentHashCode, theEpisodicEventStartDate);
        }
        {
            XMLGregorianCalendar theEpisodicEventEndDate;
            theEpisodicEventEndDate = this.getEpisodicEventEndDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "episodicEventEndDate", theEpisodicEventEndDate), currentHashCode, theEpisodicEventEndDate);
        }
        {
            List<EpisodicWasteDataType> theEpisodicWaste;
            theEpisodicWaste = (this.isSetEpisodicWaste()?this.getEpisodicWaste():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "episodicWaste", theEpisodicWaste), currentHashCode, theEpisodicWaste);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
