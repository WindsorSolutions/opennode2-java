-- ==========================================================================================
-- Author:      Chris Tyler (Windsor Solutions, Inc.)
-- Create date: 2017-06-01
-- Description: Upgrades a SQL Server ICS_FLOW_LOCAL staging database from version 5.6 to 5.8.
--
-- Change History:
--
-- Date         Name           Change
-- ----------   ------------   ------------------------------------------------------
-- 2017-06-26   TK Conrad      Fixed 'BiosolidsAnnualReport' record insert into ICS_PAYLOAD.
-- 2017-06-26   TK Conrad      Removed "ICS_FLOW_LOCAL" database from ICS_SUBM_HIST alter stmt.
-- ==========================================================================================

---$ Alter table dbo.ICS_ADDR
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_ADDR') AND NAME = 'ICS_BS_MGMT_PRACTICES_ID')
BEGIN
    ALTER TABLE dbo.ICS_ADDR
        ADD ICS_BS_MGMT_PRACTICES_ID VARCHAR(36) NULL
END
GO


---$ Alter table dbo.ICS_ASSC_PRMT
ALTER TABLE dbo.ICS_ASSC_PRMT
    ALTER COLUMN ASSC_PRMT_IDENT CHAR(9) NULL
GO


---$ Alter table dbo.ICS_BASIC_PRMT
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_BASIC_PRMT') AND NAME = 'ELEC_REP_WAIVER_TYPE_CODE')
BEGIN
    ALTER TABLE dbo.ICS_BASIC_PRMT
        ADD ELEC_REP_WAIVER_TYPE_CODE VARCHAR(3) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_BASIC_PRMT') AND NAME = 'ELEC_REP_WAIVER_EFFECTIVE_DATE')
BEGIN
    ALTER TABLE dbo.ICS_BASIC_PRMT
        ADD ELEC_REP_WAIVER_EFFECTIVE_DATE datetime NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_BASIC_PRMT') AND NAME = 'ELEC_REP_WAIVER_EXPR_DATE')
BEGIN
    ALTER TABLE dbo.ICS_BASIC_PRMT
        ADD ELEC_REP_WAIVER_EXPR_DATE datetime NULL
END
GO


---$ Alter table dbo.ICS_CMPL_MON
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_CMPL_MON') AND NAME = 'CMPL_MON_PLANNED_START_DATE')
BEGIN
    ALTER TABLE dbo.ICS_CMPL_MON
        ADD CMPL_MON_PLANNED_START_DATE datetime NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_CMPL_MON') AND NAME = 'CMPL_MON_PLANNED_END_DATE')
BEGIN
    ALTER TABLE dbo.ICS_CMPL_MON
        ADD CMPL_MON_PLANNED_END_DATE datetime NULL
END
GO


---$ Alter table dbo.ICS_CONTACT
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_CONTACT') AND NAME = 'ICS_BS_MGMT_PRACTICES_ID')
BEGIN
    ALTER TABLE dbo.ICS_CONTACT
        ADD ICS_BS_MGMT_PRACTICES_ID VARCHAR(36) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_CONTACT') AND NAME = 'ICS_BS_ANNUL_PROG_REP_ID')
BEGIN
    ALTER TABLE dbo.ICS_CONTACT
        ADD ICS_BS_ANNUL_PROG_REP_ID VARCHAR(36) NULL
END
GO


---$ Alter table dbo.ICS_DSCH_MON_REP
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_DSCH_MON_REP') AND NAME = 'ELEC_SUBM_TYPE_CODE')
BEGIN
    ALTER TABLE dbo.ICS_DSCH_MON_REP
        ADD ELEC_SUBM_TYPE_CODE VARCHAR(3) NULL
END
GO


---$ Alter table dbo.ICS_GNRL_PRMT
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_GNRL_PRMT') AND NAME = 'ELEC_SUBM_TYPE_CODE')
BEGIN
    ALTER TABLE dbo.ICS_GNRL_PRMT
        ADD ELEC_SUBM_TYPE_CODE VARCHAR(3) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_GNRL_PRMT') AND NAME = 'ELEC_REP_WAIVER_TYPE_CODE')
BEGIN
    ALTER TABLE dbo.ICS_GNRL_PRMT
        ADD ELEC_REP_WAIVER_TYPE_CODE VARCHAR(3) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_GNRL_PRMT') AND NAME = 'ELEC_REP_WAIVER_EFFECTIVE_DATE')
BEGIN
    ALTER TABLE dbo.ICS_GNRL_PRMT
        ADD ELEC_REP_WAIVER_EFFECTIVE_DATE datetime NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_GNRL_PRMT') AND NAME = 'ELEC_REP_WAIVER_EXPR_DATE')
BEGIN
    ALTER TABLE dbo.ICS_GNRL_PRMT
        ADD ELEC_REP_WAIVER_EXPR_DATE datetime NULL
END
GO


---$ Alter table dbo.ICS_INFRML_ENFRC_ACTN
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_INFRML_ENFRC_ACTN') AND NAME = 'FILE_NUM')
BEGIN
    ALTER TABLE dbo.ICS_INFRML_ENFRC_ACTN
        ADD FILE_NUM VARCHAR(50) NULL
END
GO


---$ Alter table dbo.ICS_PRMT_FEATR
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_PRMT_FEATR') AND NAME = 'TIER_LEVEL_NAME')
BEGIN
    ALTER TABLE dbo.ICS_PRMT_FEATR
        ADD TIER_LEVEL_NAME VARCHAR(3) NULL
END
GO


---$ Alter table dbo.ICS_SW_CNST_PRMT
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'CNST_SITE_OTHR_TXT')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD CNST_SITE_OTHR_TXT VARCHAR(255) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'STRCT_DEMOED_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD STRCT_DEMOED_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'STRCT_DEMOED_FLOOR_SPACE_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD STRCT_DEMOED_FLOOR_SPACE_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'PREDEV_LAND_USE_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD PREDEV_LAND_USE_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'ERTH_DISTRB_ACTIVITIES_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD ERTH_DISTRB_ACTIVITIES_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'ERTH_DISTRB_EMRGCY_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD ERTH_DISTRB_EMRGCY_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'PREVIOUS_SW_DSCH_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD PREVIOUS_SW_DSCH_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'OTHR_PRMT_IDENT')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD OTHR_PRMT_IDENT VARCHAR(30) NULL 

    -- drop generated default constraint
  --  IF OBJECT_ID(N'OTHR_PRMT_IDENT_Default_ForNotNullCol') IS NOT NULL 
  --      ALTER TABLE dbo.ICS_SW_CNST_PRMT 
  --          DROP CONSTRAINT OTHR_PRMT_IDENT_Default_ForNotNullCol
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'CGP_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD CGP_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'MS_4_DSCH_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD MS_4_DSCH_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'WTR_PROX_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD WTR_PROX_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'ANTIDEG_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD ANTIDEG_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'TRTMNT_CHEMS_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD TRTMNT_CHEMS_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'CATIONIC_CHEMS_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD CATIONIC_CHEMS_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'CATIONIC_CHEMS_AUTH_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD CATIONIC_CHEMS_AUTH_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'SWPPP_PREP_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD SWPPP_PREP_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'SBSRFC_ERTH_DSTRBN_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD SBSRFC_ERTH_DSTRBN_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'PRIOR_SURVEYS_EVALS_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD PRIOR_SURVEYS_EVALS_IND CHAR(1) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SW_CNST_PRMT') AND NAME = 'SBSRFC_ERTH_DSTRBN_CONTROL_IND')
BEGIN
    ALTER TABLE dbo.ICS_SW_CNST_PRMT
        ADD SBSRFC_ERTH_DSTRBN_CONTROL_IND CHAR(1) NULL
END
GO


---$ Alter table dbo.ICS_SW_UNPRMT_CNST_INSP
ALTER TABLE dbo.ICS_SW_UNPRMT_CNST_INSP
    ALTER COLUMN EST_AREA_DISTURBED_ACRES_NUM DECIMAL(13,2) NULL
GO


---$ Alter table dbo.ICS_UNPRMT_FAC
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_UNPRMT_FAC') AND NAME = 'LOC_ADDR_CITY_CODE')
BEGIN
    ALTER TABLE dbo.ICS_UNPRMT_FAC
        ADD LOC_ADDR_CITY_CODE VARCHAR(12) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_UNPRMT_FAC') AND NAME = 'LOC_ADDR_COUNTY_CODE')
BEGIN
    ALTER TABLE dbo.ICS_UNPRMT_FAC
        ADD LOC_ADDR_COUNTY_CODE CHAR(5) NULL
END
GO


---$ Create table dbo.ICS_ANLYTCL_METHOD
IF OBJECT_ID(N'dbo.ICS_ANLYTCL_METHOD') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_ANLYTCL_METHOD
    (
        ICS_ANLYTCL_METHOD_ID VARCHAR(36) NOT NULL,
        ICS_BS_ANNUL_PROG_REP_ID VARCHAR(36) NOT NULL,
        ANLYTCL_METHOD_TYPE_CODE VARCHAR(3) NOT NULL,
        ANLYTCL_METHOD_OTHR_TYPE_TXT VARCHAR(500) NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_BS_ANNUL_PROG_REP
IF OBJECT_ID(N'dbo.ICS_BS_ANNUL_PROG_REP') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_BS_ANNUL_PROG_REP
    (
        ICS_BS_ANNUL_PROG_REP_ID VARCHAR(36) NOT NULL,
        ICS_PAYLOAD_ID VARCHAR(36) NOT NULL,
        SRC_SYSTM_IDENT VARCHAR(50) NULL,
        TRANSACTION_TYPE CHAR(1) NULL,
        TRANSACTION_TIMESTAMP datetime NULL,
        PRMT_IDENT CHAR(9) NULL,
        BS_ANNUL_REP_RCVD_DATE datetime NULL,
        ELEC_SUBM_TYPE_CODE VARCHAR(3) NULL,
        REP_PERIOD_START_DATE datetime NULL,
        REP_PERIOD_END_DATE datetime NULL,
        TRTMNT_PRCSS_OTHR_TXT VARCHAR(100) NULL,
        TTL_VOL_AMT DECIMAL(12,6) NULL,
        BS_ADDL_INFO_CMNT_TXT VARCHAR(4000) NULL,
        DATA_HASH VARCHAR(100) NULL,
        KEY_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_BS_MGMT_PRACTICES
IF OBJECT_ID(N'dbo.ICS_BS_MGMT_PRACTICES') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_BS_MGMT_PRACTICES
    (
        ICS_BS_MGMT_PRACTICES_ID VARCHAR(36) NOT NULL,
        ICS_BS_ANNUL_PROG_REP_ID VARCHAR(36) NOT NULL,
        SSU_IDENT VARCHAR(4) NOT NULL,
        BS_MGMT_PRC_TYPE_CODE VARCHAR(3) NOT NULL,
        HNDLR_PREPR_TYPE_CODE VARCHAR(3) NOT NULL,
        LAND_APPL_SUB_CATG_CODE VARCHAR(50) NULL,
        OTHR_SUB_CATG_CODE VARCHAR(50) NULL,
        SUB_CATG_OTHR_TXT VARCHAR(100) NULL,
        BS_CNTNR_TYPE_CODE VARCHAR(3) NOT NULL,
        VOL_AMT DECIMAL(12,6) NOT NULL,
        PATHOGEN_CLASS_TYPE_CODE VARCHAR(3) NULL,
        POLUT_CONCEN_EXCEEDANCE_IND CHAR(1) NULL,
        POLUT_LOADING_R_EXCEEDANCE_IND CHAR(1) NULL,
        ACTIVE_DSPL_SITE_IND CHAR(1) NULL,
        SITE_SPEC_LMT_IND CHAR(1) NULL,
        MIN_BNDRY_DIST_IND CHAR(1) NULL,
        MIN_BNDRY_DIST_TYPE_CODE VARCHAR(3) NULL,
        ASSC_PRMT_IDENT CHAR(9) NULL,
        MGMT_PRC_CMNT_TXT VARCHAR(4000) NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_CNST_SITE
IF OBJECT_ID(N'dbo.ICS_CNST_SITE') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_CNST_SITE
    (
        ICS_CNST_SITE_ID VARCHAR(36) NOT NULL,
        ICS_SW_CNST_PRMT_ID VARCHAR(36) NOT NULL,
        CNST_SITE_CODE VARCHAR(50) NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_IMPAIRED_WTR_POLLUTANTS
IF OBJECT_ID(N'dbo.ICS_IMPAIRED_WTR_POLLUTANTS') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_IMPAIRED_WTR_POLLUTANTS
    (
        ICS_IMPAIRED_WTR_POLLUTANTS_ID VARCHAR(36) NOT NULL,
        ICS_PRMT_FEATR_ID VARCHAR(36) NOT NULL,
        IMPAIRED_WTR_POLLUTANTS INTEGER NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_MGMT_PRC_DEFCY_TYPE
IF OBJECT_ID(N'dbo.ICS_MGMT_PRC_DEFCY_TYPE') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_MGMT_PRC_DEFCY_TYPE
    (
        ICS_MGMT_PRC_DEFCY_TYPE_ID VARCHAR(36) NOT NULL,
        ICS_BS_MGMT_PRACTICES_ID VARCHAR(36) NOT NULL,
        MGMT_PRC_DEFCY_TYPE_CODE VARCHAR(3) NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_NPDES_DAT_GRP_NUM
IF OBJECT_ID(N'dbo.ICS_NPDES_DAT_GRP_NUM') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_NPDES_DAT_GRP_NUM
    (
        ICS_NPDES_DAT_GRP_NUM_ID VARCHAR(36) NOT NULL,
        ICS_BASIC_PRMT_ID VARCHAR(36) NULL,
        ICS_GNRL_PRMT_ID VARCHAR(36) NULL,
        NPDES_DAT_GRP_NUM_CODE VARCHAR(3) NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_PATHOGEN_REDUCTION_TYPE
IF OBJECT_ID(N'dbo.ICS_PATHOGEN_REDUCTION_TYPE') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_PATHOGEN_REDUCTION_TYPE
    (
        ICS_PATHOGEN_REDUCTION_TYPE_ID VARCHAR(36) NOT NULL,
        ICS_BS_MGMT_PRACTICES_ID VARCHAR(36) NOT NULL,
        PATHOGEN_REDUCTION_TYPE_CODE VARCHAR(3) NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_REP_OBLGTN_TYPE
IF OBJECT_ID(N'dbo.ICS_REP_OBLGTN_TYPE') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_REP_OBLGTN_TYPE
    (
        ICS_REP_OBLGTN_TYPE_ID VARCHAR(36) NOT NULL,
        ICS_BS_ANNUL_PROG_REP_ID VARCHAR(36) NOT NULL,
        REP_OBLGTN_TYPE_CODE VARCHAR(3) NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_TMDL_POLLUTANTS
IF OBJECT_ID(N'dbo.ICS_TMDL_POLLUTANTS') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_TMDL_POLLUTANTS
    (
        ICS_TMDL_POLLUTANTS_ID VARCHAR(36) NOT NULL,
        ICS_PRMT_FEATR_ID VARCHAR(36) NOT NULL,
        TMDL_IDENT VARCHAR(6) NOT NULL,
        TMDL_NAME VARCHAR(100) NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_TMDL_POLUT
IF OBJECT_ID(N'dbo.ICS_TMDL_POLUT') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_TMDL_POLUT
    (
        ICS_TMDL_POLUT_ID VARCHAR(36) NOT NULL,
        ICS_TMDL_POLLUTANTS_ID VARCHAR(36) NOT NULL,
        TMDL_POLUT_CODE INT NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_TRTMNT_CHEMS_LIST
IF OBJECT_ID(N'dbo.ICS_TRTMNT_CHEMS_LIST') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_TRTMNT_CHEMS_LIST
    (
        ICS_TRTMNT_CHEMS_LIST_ID VARCHAR(36) NOT NULL,
        ICS_SW_CNST_PRMT_ID VARCHAR(36) NOT NULL,
        TRTMNT_CHEMS_LIST VARCHAR(255) NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_TRTMNT_PRCSS_TYPE
IF OBJECT_ID(N'dbo.ICS_TRTMNT_PRCSS_TYPE') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_TRTMNT_PRCSS_TYPE
    (
        ICS_TRTMNT_PRCSS_TYPE_ID VARCHAR(36) NOT NULL,
        ICS_BS_ANNUL_PROG_REP_ID VARCHAR(36) NOT NULL,
        TRTMNT_PRCSS_TYPE_CODE VARCHAR(3) NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create table dbo.ICS_VECTOR_A_REDUCTION_TYPE
IF OBJECT_ID(N'dbo.ICS_VECTOR_A_REDUCTION_TYPE') IS NULL
BEGIN
    CREATE TABLE dbo.ICS_VECTOR_A_REDUCTION_TYPE
    (
        ICS_VECTOR_A_REDUCTION_TYPE_ID VARCHAR(36) NOT NULL,
        ICS_BS_MGMT_PRACTICES_ID VARCHAR(36) NOT NULL,
        VECTOR_A_REDUCTION_TYPE_CODE VARCHAR(3) NOT NULL,
        DATA_HASH VARCHAR(100) NULL
    )
    ON [PRIMARY] 
END
GO


---$ Create Index/PK: IX_ADDR_ICS_BS_MGMT_PRCTICS_ID, Table : dbo.ICS_ADDR
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_ADDR') AND NAME = 'IX_ADDR_ICS_BS_MGMT_PRCTICS_ID')
    CREATE  NONCLUSTERED  INDEX IX_ADDR_ICS_BS_MGMT_PRCTICS_ID
        ON dbo.ICS_ADDR(ICS_BS_MGMT_PRACTICES_ID)
GO

---$ Create Index/PK: IX_CNTC_ICS_BS_ANNL_PRO_REP_ID, Table : dbo.ICS_CONTACT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_CONTACT') AND NAME = 'IX_CNTC_ICS_BS_ANNL_PRO_REP_ID')
    CREATE  NONCLUSTERED  INDEX IX_CNTC_ICS_BS_ANNL_PRO_REP_ID
        ON dbo.ICS_CONTACT(ICS_BS_ANNUL_PROG_REP_ID)
GO

---$ Create Index/PK: IX_CNTCT_ICS_BS_MGMT_PRCTCS_ID, Table : dbo.ICS_CONTACT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_CONTACT') AND NAME = 'IX_CNTCT_ICS_BS_MGMT_PRCTCS_ID')
    CREATE  NONCLUSTERED  INDEX IX_CNTCT_ICS_BS_MGMT_PRCTCS_ID
        ON dbo.ICS_CONTACT(ICS_BS_MGMT_PRACTICES_ID)
GO

---$ Create Index/PK: IX_ANL_MTH_ICS_BS_ANN_PR_RE_ID, Table : dbo.ICS_ANLYTCL_METHOD
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_ANLYTCL_METHOD') AND NAME = 'IX_ANL_MTH_ICS_BS_ANN_PR_RE_ID')
    CREATE  NONCLUSTERED  INDEX IX_ANL_MTH_ICS_BS_ANN_PR_RE_ID
        ON dbo.ICS_ANLYTCL_METHOD(ICS_BS_ANNUL_PROG_REP_ID)
GO

---$ Create Index/PK: PK_ANLYTCL_METHOD, Table : dbo.ICS_ANLYTCL_METHOD
IF OBJECT_ID(N'dbo.PK_ANLYTCL_METHOD') IS NULL
    ALTER TABLE dbo.ICS_ANLYTCL_METHOD
        ADD CONSTRAINT PK_ANLYTCL_METHOD PRIMARY KEY CLUSTERED(ICS_ANLYTCL_METHOD_ID)
GO

---$ Create Index/PK: IX_BS_ANNL_PROG_REP_ICS_PYL_ID, Table : dbo.ICS_BS_ANNUL_PROG_REP
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_BS_ANNUL_PROG_REP') AND NAME = 'IX_BS_ANNL_PROG_REP_ICS_PYL_ID')
    CREATE  NONCLUSTERED  INDEX IX_BS_ANNL_PROG_REP_ICS_PYL_ID
        ON dbo.ICS_BS_ANNUL_PROG_REP(ICS_PAYLOAD_ID)
GO

---$ Create Index/PK: PK_BS_ANNUL_PROG_REP, Table : dbo.ICS_BS_ANNUL_PROG_REP
IF OBJECT_ID(N'dbo.PK_BS_ANNUL_PROG_REP') IS NULL
    ALTER TABLE dbo.ICS_BS_ANNUL_PROG_REP
        ADD CONSTRAINT PK_BS_ANNUL_PROG_REP PRIMARY KEY CLUSTERED(ICS_BS_ANNUL_PROG_REP_ID)
GO

---$ Create Index/PK: IX_BS_MGM_PR_IC_BS_AN_PR_RE_ID, Table : dbo.ICS_BS_MGMT_PRACTICES
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_BS_MGMT_PRACTICES') AND NAME = 'IX_BS_MGM_PR_IC_BS_AN_PR_RE_ID')
    CREATE  NONCLUSTERED  INDEX IX_BS_MGM_PR_IC_BS_AN_PR_RE_ID
        ON dbo.ICS_BS_MGMT_PRACTICES(ICS_BS_ANNUL_PROG_REP_ID)
GO

---$ Create Index/PK: PK_BS_MGMT_PRACTICES, Table : dbo.ICS_BS_MGMT_PRACTICES
IF OBJECT_ID(N'dbo.PK_BS_MGMT_PRACTICES') IS NULL
    ALTER TABLE dbo.ICS_BS_MGMT_PRACTICES
        ADD CONSTRAINT PK_BS_MGMT_PRACTICES PRIMARY KEY CLUSTERED(ICS_BS_MGMT_PRACTICES_ID)
GO

---$ Create Index/PK: IX_CNST_SITE_ICS_SW_CNS_PRM_ID, Table : dbo.ICS_CNST_SITE
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_CNST_SITE') AND NAME = 'IX_CNST_SITE_ICS_SW_CNS_PRM_ID')
    CREATE  NONCLUSTERED  INDEX IX_CNST_SITE_ICS_SW_CNS_PRM_ID
        ON dbo.ICS_CNST_SITE(ICS_SW_CNST_PRMT_ID)
GO

---$ Create Index/PK: PK_CNST_SITE, Table : dbo.ICS_CNST_SITE
IF OBJECT_ID(N'dbo.PK_CNST_SITE') IS NULL
    ALTER TABLE dbo.ICS_CNST_SITE
        ADD CONSTRAINT PK_CNST_SITE PRIMARY KEY CLUSTERED(ICS_CNST_SITE_ID)
GO

---$ Create Index/PK: IX_IMPR_WTR_PLL_ICS_PRM_FET_ID, Table : dbo.ICS_IMPAIRED_WTR_POLLUTANTS
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_IMPAIRED_WTR_POLLUTANTS') AND NAME = 'IX_IMPR_WTR_PLL_ICS_PRM_FET_ID')
    CREATE  NONCLUSTERED  INDEX IX_IMPR_WTR_PLL_ICS_PRM_FET_ID
        ON dbo.ICS_IMPAIRED_WTR_POLLUTANTS(ICS_PRMT_FEATR_ID)
GO

---$ Create Index/PK: PK_IMPAIRED_WTR_POLLUTANTS, Table : dbo.ICS_IMPAIRED_WTR_POLLUTANTS
IF OBJECT_ID(N'dbo.PK_IMPAIRED_WTR_POLLUTANTS') IS NULL
    ALTER TABLE dbo.ICS_IMPAIRED_WTR_POLLUTANTS
        ADD CONSTRAINT PK_IMPAIRED_WTR_POLLUTANTS PRIMARY KEY CLUSTERED(ICS_IMPAIRED_WTR_POLLUTANTS_ID)
GO

---$ Create Index/PK: IX_MGM_PR_DF_TY_IC_BS_MG_PR_ID, Table : dbo.ICS_MGMT_PRC_DEFCY_TYPE
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_MGMT_PRC_DEFCY_TYPE') AND NAME = 'IX_MGM_PR_DF_TY_IC_BS_MG_PR_ID')
    CREATE  NONCLUSTERED  INDEX IX_MGM_PR_DF_TY_IC_BS_MG_PR_ID
        ON dbo.ICS_MGMT_PRC_DEFCY_TYPE(ICS_BS_MGMT_PRACTICES_ID)
GO

---$ Create Index/PK: PK_MGMT_PRC_DEFCY_TYPE, Table : dbo.ICS_MGMT_PRC_DEFCY_TYPE
IF OBJECT_ID(N'dbo.PK_MGMT_PRC_DEFCY_TYPE') IS NULL
    ALTER TABLE dbo.ICS_MGMT_PRC_DEFCY_TYPE
        ADD CONSTRAINT PK_MGMT_PRC_DEFCY_TYPE PRIMARY KEY CLUSTERED(ICS_MGMT_PRC_DEFCY_TYPE_ID)
GO

---$ Create Index/PK: IX_NPD_DAT_GRP_NUM_IC_BS_PR_ID, Table : dbo.ICS_NPDES_DAT_GRP_NUM
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_NPDES_DAT_GRP_NUM') AND NAME = 'IX_NPD_DAT_GRP_NUM_IC_BS_PR_ID')
    CREATE  NONCLUSTERED  INDEX IX_NPD_DAT_GRP_NUM_IC_BS_PR_ID
        ON dbo.ICS_NPDES_DAT_GRP_NUM(ICS_BASIC_PRMT_ID)
GO

---$ Create Index/PK: IX_NPD_DAT_GRP_NUM_IC_GN_PR_ID, Table : dbo.ICS_NPDES_DAT_GRP_NUM
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_NPDES_DAT_GRP_NUM') AND NAME = 'IX_NPD_DAT_GRP_NUM_IC_GN_PR_ID')
    CREATE  NONCLUSTERED  INDEX IX_NPD_DAT_GRP_NUM_IC_GN_PR_ID
        ON dbo.ICS_NPDES_DAT_GRP_NUM(ICS_GNRL_PRMT_ID)
GO

---$ Create Index/PK: PK_NPDES_DAT_GRP_NUM, Table : dbo.ICS_NPDES_DAT_GRP_NUM
IF OBJECT_ID(N'dbo.PK_NPDES_DAT_GRP_NUM') IS NULL
    ALTER TABLE dbo.ICS_NPDES_DAT_GRP_NUM
        ADD CONSTRAINT PK_NPDES_DAT_GRP_NUM PRIMARY KEY CLUSTERED(ICS_NPDES_DAT_GRP_NUM_ID)
GO

---$ Create Index/PK: IX_PTH_RDC_TYP_ICS_BS_MG_PR_ID, Table : dbo.ICS_PATHOGEN_REDUCTION_TYPE
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_PATHOGEN_REDUCTION_TYPE') AND NAME = 'IX_PTH_RDC_TYP_ICS_BS_MG_PR_ID')
    CREATE  NONCLUSTERED  INDEX IX_PTH_RDC_TYP_ICS_BS_MG_PR_ID
        ON dbo.ICS_PATHOGEN_REDUCTION_TYPE(ICS_BS_MGMT_PRACTICES_ID)
GO

---$ Create Index/PK: PK_PATHOGEN_REDUCTION_TYPE, Table : dbo.ICS_PATHOGEN_REDUCTION_TYPE
IF OBJECT_ID(N'dbo.PK_PATHOGEN_REDUCTION_TYPE') IS NULL
    ALTER TABLE dbo.ICS_PATHOGEN_REDUCTION_TYPE
        ADD CONSTRAINT PK_PATHOGEN_REDUCTION_TYPE PRIMARY KEY CLUSTERED(ICS_PATHOGEN_REDUCTION_TYPE_ID)
GO

---$ Create Index/PK: IX_REP_OB_TY_IC_BS_AN_PR_RE_ID, Table : dbo.ICS_REP_OBLGTN_TYPE
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_REP_OBLGTN_TYPE') AND NAME = 'IX_REP_OB_TY_IC_BS_AN_PR_RE_ID')
    CREATE  NONCLUSTERED  INDEX IX_REP_OB_TY_IC_BS_AN_PR_RE_ID
        ON dbo.ICS_REP_OBLGTN_TYPE(ICS_BS_ANNUL_PROG_REP_ID)
GO

---$ Create Index/PK: PK_REP_OBLGTN_TYPE, Table : dbo.ICS_REP_OBLGTN_TYPE
IF OBJECT_ID(N'dbo.PK_REP_OBLGTN_TYPE') IS NULL
    ALTER TABLE dbo.ICS_REP_OBLGTN_TYPE
        ADD CONSTRAINT PK_REP_OBLGTN_TYPE PRIMARY KEY CLUSTERED(ICS_REP_OBLGTN_TYPE_ID)
GO

---$ Create Index/PK: IX_TMDL_PLLTN_ICS_PRMT_FETR_ID, Table : dbo.ICS_TMDL_POLLUTANTS
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_TMDL_POLLUTANTS') AND NAME = 'IX_TMDL_PLLTN_ICS_PRMT_FETR_ID')
    CREATE  NONCLUSTERED  INDEX IX_TMDL_PLLTN_ICS_PRMT_FETR_ID
        ON dbo.ICS_TMDL_POLLUTANTS(ICS_PRMT_FEATR_ID)
GO

---$ Create Index/PK: PK_TMDL_POLLUTANTS, Table : dbo.ICS_TMDL_POLLUTANTS
IF OBJECT_ID(N'dbo.PK_TMDL_POLLUTANTS') IS NULL
    ALTER TABLE dbo.ICS_TMDL_POLLUTANTS
        ADD CONSTRAINT PK_TMDL_POLLUTANTS PRIMARY KEY CLUSTERED(ICS_TMDL_POLLUTANTS_ID)
GO

---$ Create Index/PK: IX_TMDL_PLUT_ICS_TMDL_PLLTN_ID, Table : dbo.ICS_TMDL_POLUT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_TMDL_POLUT') AND NAME = 'IX_TMDL_PLUT_ICS_TMDL_PLLTN_ID')
    CREATE  NONCLUSTERED  INDEX IX_TMDL_PLUT_ICS_TMDL_PLLTN_ID
        ON dbo.ICS_TMDL_POLUT(ICS_TMDL_POLLUTANTS_ID)
GO

IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_BS_ANNUL_PROG_REP') AND NAME = 'IX_BS_ANL_REP_PR_ID_RE_CV_DA')
 CREATE UNIQUE NONCLUSTERED INDEX [IX_BS_ANL_REP_PR_ID_RE_CV_DA] ON [dbo].[ICS_BS_ANNUL_PROG_REP]
(
	[PRMT_IDENT] ASC,
	[BS_ANNUL_REP_RCVD_DATE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

---$ Create Index/PK: PK_TMDL_POLUT, Table : dbo.ICS_TMDL_POLUT
IF OBJECT_ID(N'dbo.PK_TMDL_POLUT') IS NULL
    ALTER TABLE dbo.ICS_TMDL_POLUT
        ADD CONSTRAINT PK_TMDL_POLUT PRIMARY KEY CLUSTERED(ICS_TMDL_POLUT_ID)
GO

---$ Create Index/PK: IX_TRT_CHM_LIS_ICS_SW_CN_PR_ID, Table : dbo.ICS_TRTMNT_CHEMS_LIST
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_TRTMNT_CHEMS_LIST') AND NAME = 'IX_TRT_CHM_LIS_ICS_SW_CN_PR_ID')
    CREATE  NONCLUSTERED  INDEX IX_TRT_CHM_LIS_ICS_SW_CN_PR_ID
        ON dbo.ICS_TRTMNT_CHEMS_LIST(ICS_SW_CNST_PRMT_ID)
GO

---$ Create Index/PK: PK_TRTMNT_CHEMS_LIST, Table : dbo.ICS_TRTMNT_CHEMS_LIST
IF OBJECT_ID(N'dbo.PK_TRTMNT_CHEMS_LIST') IS NULL
    ALTER TABLE dbo.ICS_TRTMNT_CHEMS_LIST
        ADD CONSTRAINT PK_TRTMNT_CHEMS_LIST PRIMARY KEY CLUSTERED(ICS_TRTMNT_CHEMS_LIST_ID)
GO

---$ Create Index/PK: IX_TRT_PR_TY_IC_BS_AN_PR_RE_ID, Table : dbo.ICS_TRTMNT_PRCSS_TYPE
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_TRTMNT_PRCSS_TYPE') AND NAME = 'IX_TRT_PR_TY_IC_BS_AN_PR_RE_ID')
    CREATE  NONCLUSTERED  INDEX IX_TRT_PR_TY_IC_BS_AN_PR_RE_ID
        ON dbo.ICS_TRTMNT_PRCSS_TYPE(ICS_BS_ANNUL_PROG_REP_ID)
GO

---$ Create Index/PK: PK_TRTMNT_PRCSS_TYPE, Table : dbo.ICS_TRTMNT_PRCSS_TYPE
IF OBJECT_ID(N'dbo.PK_TRTMNT_PRCSS_TYPE') IS NULL
    ALTER TABLE dbo.ICS_TRTMNT_PRCSS_TYPE
        ADD CONSTRAINT PK_TRTMNT_PRCSS_TYPE PRIMARY KEY CLUSTERED(ICS_TRTMNT_PRCSS_TYPE_ID)
GO

---$ Create Index/PK: IX_VCT_A_RDC_TY_IC_BS_MG_PR_ID, Table : dbo.ICS_VECTOR_A_REDUCTION_TYPE
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_VECTOR_A_REDUCTION_TYPE') AND NAME = 'IX_VCT_A_RDC_TY_IC_BS_MG_PR_ID')
    CREATE  NONCLUSTERED  INDEX IX_VCT_A_RDC_TY_IC_BS_MG_PR_ID
        ON dbo.ICS_VECTOR_A_REDUCTION_TYPE(ICS_BS_MGMT_PRACTICES_ID)
GO

---$ Create Index/PK: PK_VECTOR_A_REDUCTION_TYPE, Table : dbo.ICS_VECTOR_A_REDUCTION_TYPE
IF OBJECT_ID(N'dbo.PK_VECTOR_A_REDUCTION_TYPE') IS NULL
    ALTER TABLE dbo.ICS_VECTOR_A_REDUCTION_TYPE
        ADD CONSTRAINT PK_VECTOR_A_REDUCTION_TYPE PRIMARY KEY CLUSTERED(ICS_VECTOR_A_REDUCTION_TYPE_ID)
GO

---$ Create FK : FK_ADDR_BS_MGMT_PRACTICES
IF OBJECT_ID(N'dbo.FK_ADDR_BS_MGMT_PRACTICES') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_ADDR
        ADD CONSTRAINT FK_ADDR_BS_MGMT_PRACTICES
            FOREIGN KEY(ICS_BS_MGMT_PRACTICES_ID)
                REFERENCES dbo.ICS_BS_MGMT_PRACTICES(ICS_BS_MGMT_PRACTICES_ID)
                    ON DELETE NO ACTION
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_NPDES_DAT_GRP_NUM_BSIC_PRMT
IF OBJECT_ID(N'dbo.FK_NPDES_DAT_GRP_NUM_BSIC_PRMT') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_NPDES_DAT_GRP_NUM
        ADD CONSTRAINT FK_NPDES_DAT_GRP_NUM_BSIC_PRMT
            FOREIGN KEY(ICS_BASIC_PRMT_ID)
                REFERENCES dbo.ICS_BASIC_PRMT(ICS_BASIC_PRMT_ID)
                    ON DELETE NO ACTION
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_CONTACT_BS_ANNUL_PROG_REP
IF OBJECT_ID(N'dbo.FK_CONTACT_BS_ANNUL_PROG_REP') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_CONTACT
        ADD CONSTRAINT FK_CONTACT_BS_ANNUL_PROG_REP
            FOREIGN KEY(ICS_BS_ANNUL_PROG_REP_ID)
                REFERENCES dbo.ICS_BS_ANNUL_PROG_REP(ICS_BS_ANNUL_PROG_REP_ID)
                    ON DELETE NO ACTION
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_CONTACT_BS_MGMT_PRACTICES
IF OBJECT_ID(N'dbo.FK_CONTACT_BS_MGMT_PRACTICES') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_CONTACT
        ADD CONSTRAINT FK_CONTACT_BS_MGMT_PRACTICES
            FOREIGN KEY(ICS_BS_MGMT_PRACTICES_ID)
                REFERENCES dbo.ICS_BS_MGMT_PRACTICES(ICS_BS_MGMT_PRACTICES_ID)
                    ON DELETE NO ACTION
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_NPDES_DAT_GRP_NUM_GNRL_PRMT
IF OBJECT_ID(N'dbo.FK_NPDES_DAT_GRP_NUM_GNRL_PRMT') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_NPDES_DAT_GRP_NUM
        ADD CONSTRAINT FK_NPDES_DAT_GRP_NUM_GNRL_PRMT
            FOREIGN KEY(ICS_GNRL_PRMT_ID)
                REFERENCES dbo.ICS_GNRL_PRMT(ICS_GNRL_PRMT_ID)
                    ON DELETE NO ACTION
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_BS_ANNUL_PROG_REP_PAYLOAD
IF OBJECT_ID(N'dbo.FK_BS_ANNUL_PROG_REP_PAYLOAD') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_BS_ANNUL_PROG_REP
        ADD CONSTRAINT FK_BS_ANNUL_PROG_REP_PAYLOAD
            FOREIGN KEY(ICS_PAYLOAD_ID)
                REFERENCES dbo.ICS_PAYLOAD(ICS_PAYLOAD_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_IMPRD_WTR_PLLTNTS_PRMT_FETR
IF OBJECT_ID(N'dbo.FK_IMPRD_WTR_PLLTNTS_PRMT_FETR') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_IMPAIRED_WTR_POLLUTANTS
        ADD CONSTRAINT FK_IMPRD_WTR_PLLTNTS_PRMT_FETR
            FOREIGN KEY(ICS_PRMT_FEATR_ID)
                REFERENCES dbo.ICS_PRMT_FEATR(ICS_PRMT_FEATR_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_TMDL_POLLUTANTS_PRMT_FEATR
IF OBJECT_ID(N'dbo.FK_TMDL_POLLUTANTS_PRMT_FEATR') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_TMDL_POLLUTANTS
        ADD CONSTRAINT FK_TMDL_POLLUTANTS_PRMT_FEATR
            FOREIGN KEY(ICS_PRMT_FEATR_ID)
                REFERENCES dbo.ICS_PRMT_FEATR(ICS_PRMT_FEATR_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_CNST_SITE_SW_CNST_PRMT
IF OBJECT_ID(N'dbo.FK_CNST_SITE_SW_CNST_PRMT') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_CNST_SITE
        ADD CONSTRAINT FK_CNST_SITE_SW_CNST_PRMT
            FOREIGN KEY(ICS_SW_CNST_PRMT_ID)
                REFERENCES dbo.ICS_SW_CNST_PRMT(ICS_SW_CNST_PRMT_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_TRTM_CHMS_LIST_SW_CNST_PRMT
IF OBJECT_ID(N'dbo.FK_TRTM_CHMS_LIST_SW_CNST_PRMT') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_TRTMNT_CHEMS_LIST
        ADD CONSTRAINT FK_TRTM_CHMS_LIST_SW_CNST_PRMT
            FOREIGN KEY(ICS_SW_CNST_PRMT_ID)
                REFERENCES dbo.ICS_SW_CNST_PRMT(ICS_SW_CNST_PRMT_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_ANLYT_MTHD_BS_ANNL_PROG_REP
IF OBJECT_ID(N'dbo.FK_ANLYT_MTHD_BS_ANNL_PROG_REP') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_ANLYTCL_METHOD
        ADD CONSTRAINT FK_ANLYT_MTHD_BS_ANNL_PROG_REP
            FOREIGN KEY(ICS_BS_ANNUL_PROG_REP_ID)
                REFERENCES dbo.ICS_BS_ANNUL_PROG_REP(ICS_BS_ANNUL_PROG_REP_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_REP_OBLG_TYP_BS_ANN_PRO_REP
IF OBJECT_ID(N'dbo.FK_REP_OBLG_TYP_BS_ANN_PRO_REP') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_REP_OBLGTN_TYPE
        ADD CONSTRAINT FK_REP_OBLG_TYP_BS_ANN_PRO_REP
            FOREIGN KEY(ICS_BS_ANNUL_PROG_REP_ID)
                REFERENCES dbo.ICS_BS_ANNUL_PROG_REP(ICS_BS_ANNUL_PROG_REP_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_TRTM_PRC_TYP_BS_ANN_PRO_REP
IF OBJECT_ID(N'dbo.FK_TRTM_PRC_TYP_BS_ANN_PRO_REP') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_TRTMNT_PRCSS_TYPE
        ADD CONSTRAINT FK_TRTM_PRC_TYP_BS_ANN_PRO_REP
            FOREIGN KEY(ICS_BS_ANNUL_PROG_REP_ID)
                REFERENCES dbo.ICS_BS_ANNUL_PROG_REP(ICS_BS_ANNUL_PROG_REP_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_BS_MGMT_PRCT_BS_ANN_PRO_REP
IF OBJECT_ID(N'dbo.FK_BS_MGMT_PRCT_BS_ANN_PRO_REP') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_BS_MGMT_PRACTICES
        ADD CONSTRAINT FK_BS_MGMT_PRCT_BS_ANN_PRO_REP
            FOREIGN KEY(ICS_BS_ANNUL_PROG_REP_ID)
                REFERENCES dbo.ICS_BS_ANNUL_PROG_REP(ICS_BS_ANNUL_PROG_REP_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_VCTR_A_RDCT_TYPE_BS_MGM_PRC
IF OBJECT_ID(N'dbo.FK_VCTR_A_RDCT_TYPE_BS_MGM_PRC') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_VECTOR_A_REDUCTION_TYPE
        ADD CONSTRAINT FK_VCTR_A_RDCT_TYPE_BS_MGM_PRC
            FOREIGN KEY(ICS_BS_MGMT_PRACTICES_ID)
                REFERENCES dbo.ICS_BS_MGMT_PRACTICES(ICS_BS_MGMT_PRACTICES_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_MGMT_PRC_DFC_TYP_BS_MGM_PRC
IF OBJECT_ID(N'dbo.FK_MGMT_PRC_DFC_TYP_BS_MGM_PRC') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_MGMT_PRC_DEFCY_TYPE
        ADD CONSTRAINT FK_MGMT_PRC_DFC_TYP_BS_MGM_PRC
            FOREIGN KEY(ICS_BS_MGMT_PRACTICES_ID)
                REFERENCES dbo.ICS_BS_MGMT_PRACTICES(ICS_BS_MGMT_PRACTICES_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_PTHG_RDCT_TYPE_BS_MGMT_PRCT
IF OBJECT_ID(N'dbo.FK_PTHG_RDCT_TYPE_BS_MGMT_PRCT') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_PATHOGEN_REDUCTION_TYPE
        ADD CONSTRAINT FK_PTHG_RDCT_TYPE_BS_MGMT_PRCT
            FOREIGN KEY(ICS_BS_MGMT_PRACTICES_ID)
                REFERENCES dbo.ICS_BS_MGMT_PRACTICES(ICS_BS_MGMT_PRACTICES_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_TMDL_POLUT_TMDL_POLLUTANTS
IF OBJECT_ID(N'dbo.FK_TMDL_POLUT_TMDL_POLLUTANTS') IS NULL
BEGIN
    ALTER TABLE dbo.ICS_TMDL_POLUT
        ADD CONSTRAINT FK_TMDL_POLUT_TMDL_POLLUTANTS
            FOREIGN KEY(ICS_TMDL_POLLUTANTS_ID)
                REFERENCES dbo.ICS_TMDL_POLLUTANTS(ICS_TMDL_POLLUTANTS_ID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

DROP INDEX [dbo].[ICS_CMPL_MON_LNK].[IX_CMPL_MON_LNK_CMPL_MON_IDENT]
GO
ALTER TABLE dbo.ICS_CMPL_MON_LNK
    ALTER COLUMN CMPL_MON_IDENT VARCHAR(25) NOT NULL
GO
CREATE INDEX [IX_CMPL_MON_LNK_CMPL_MON_IDENT]
	ON [dbo].[ICS_CMPL_MON_LNK]([CMPL_MON_IDENT])
GO

---$ Alter table dbo.ICS_LNK_ST_CMPL_MON
ALTER TABLE dbo.ICS_LNK_ST_CMPL_MON
    ALTER COLUMN CMPL_MON_IDENT VARCHAR(25) NOT NULL
GO
---$ Alter table dbo.ICS_FAC
ALTER TABLE dbo.ICS_FAC
    ALTER COLUMN LOC_ADDR_COUNTY_CODE CHAR(5) NULL
GO

---$ Alter table dbo.ICS_UNPRMT_FAC
ALTER TABLE dbo.ICS_UNPRMT_FAC
    ALTER COLUMN LOC_ADDR_COUNTY_CODE CHAR(5) NULL
GO

---$ Alter table dbo.ICS_CMPL_SCHD_EVT_VIOL_ELEM
ALTER TABLE dbo.ICS_CMPL_SCHD_EVT_VIOL_ELEM
    ALTER COLUMN FINAL_ORDER_IDENT int NULL
GO

IF NOT EXISTS (SELECT * from ICS_PAYLOAD where ICS_PAYLOAD_ID = 'BiosolidsAnnualProgramReport')
Insert into ICS_PAYLOAD (ICS_PAYLOAD_ID,OPERATION,ENABLED,AUTO_GEN_DELETES,BASE_TABLE_NAME,ETL_PROCEDURE) values ('BiosolidsAnnualProgramReport','BiosolidsAnnualProgramReportSubmission','Y','Y','ICS_BS_ANNUL_PROG_REP',null);

---$ Alter table dbo.ICS_CONTACT
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_CONTACT') AND NAME = 'ICS_BS_MGMT_PRACTICES_ID')
BEGIN
    ALTER TABLE dbo.ICS_CONTACT
        ADD ICS_BS_MGMT_PRACTICES_ID VARCHAR(36) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.ICS_SUBM_RESULTS') AND NAME = 'BS_ANNUL_REP_RCVD_DATE')
BEGIN
   ALTER TABLE ICS_SUBM_RESULTS ADD BS_ANNUL_REP_RCVD_DATE DATETIME null;
END
GO

-- Caused errors when not nullable in PAT (still fills with date)
alter table dbo.ICS_SUBM_HIST
ALTER COLUMN SUBM_DATE_TIME datetime null;
GO



---$ Create table dbo.ICS_ABOUT_DB
IF OBJECT_ID(N'dbo.ICS_ABOUT_DB') IS NULL
BEGIN
      CREATE TABLE ICS_ABOUT_DB
      ( 
      ICS_ABOUT_DB_ID VARCHAR(36) NOT NULL
      ,DATA_KEY NVARCHAR(50) NOT NULL
      ,DATA_VALUE NVARCHAR(4000)
      ,CONSTRAINT [PK_ABOUT_DB] PRIMARY KEY CLUSTERED 
      (
         [ICS_ABOUT_DB_ID] ASC
      )
      );
   insert into ICS_ABOUT_DB(ICS_ABOUT_DB_ID,DATA_KEY,DATA_VALUE) VALUES(NEWID(),'ICIS_NPDES_VERSION','5.8');
   insert into ICS_ABOUT_DB(ICS_ABOUT_DB_ID,DATA_KEY,DATA_VALUE) VALUES(NEWID(),'UPDATE_DATE',GETDATE());
   insert into ICS_ABOUT_DB(ICS_ABOUT_DB_ID,DATA_KEY,DATA_VALUE) VALUES(NEWID(),'UPDATE_ANALYST','Windsor');
     
END
GO

-- Set BASE_TABLE_NAME in ICS_PAYLOAD

UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_BASIC_PRMT' WHERE ICS_PAYLOAD_ID = 'BasicPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_BS_ANNUL_PROG_REP' WHERE ICS_PAYLOAD_ID = 'BiosolidsAnnualProgramReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_BS_PRMT' WHERE ICS_PAYLOAD_ID = 'BiosolidsPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_BS_PROG_REP' WHERE ICS_PAYLOAD_ID = 'BiosolidsProgramReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_CAFO_ANNUL_REP' WHERE ICS_PAYLOAD_ID = 'CAFOAnnualReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_CAFO_PRMT' WHERE ICS_PAYLOAD_ID = 'CAFOPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_CMPL_MON' WHERE ICS_PAYLOAD_ID = 'ComplianceMonitoring';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_CMPL_MON_LNK' WHERE ICS_PAYLOAD_ID = 'ComplianceMonitoringLinkage';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_CMPL_SCHD' WHERE ICS_PAYLOAD_ID = 'ComplianceSchedule';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_CSO_EVT_REP' WHERE ICS_PAYLOAD_ID = 'CSOEventReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_CSO_PRMT' WHERE ICS_PAYLOAD_ID = 'CSOPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_DSCH_MON_REP' WHERE ICS_PAYLOAD_ID = 'DischargeMonitoringReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_DMR_PROG_REP_LNK' WHERE ICS_PAYLOAD_ID = 'DMRProgramReportLinkage';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_DMR_VIOL' WHERE ICS_PAYLOAD_ID = 'DMRViolation';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_EFFLU_TRADE_PRTNER' WHERE ICS_PAYLOAD_ID = 'EffluentTradePartner';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_ENFRC_ACTN_MILESTONE' WHERE ICS_PAYLOAD_ID = 'EnforcementActionMilestone';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_ENFRC_ACTN_VIOL_LNK' WHERE ICS_PAYLOAD_ID = 'EnforcementActionViolationLinkage';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_FINAL_ORDER_VIOL_LNK' WHERE ICS_PAYLOAD_ID = 'FinalOrderViolationLinkage';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_FRML_ENFRC_ACTN' WHERE ICS_PAYLOAD_ID = 'FormalEnforcementAction';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_GNRL_PRMT' WHERE ICS_PAYLOAD_ID = 'GeneralPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_HIST_PRMT_SCHD_EVTS' WHERE ICS_PAYLOAD_ID = 'HistoricalPermitScheduleEvents';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_INFRML_ENFRC_ACTN' WHERE ICS_PAYLOAD_ID = 'InformalEnforcementAction';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_LMTS' WHERE ICS_PAYLOAD_ID = 'Limits';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_LMT_SET' WHERE ICS_PAYLOAD_ID = 'LimitSet';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_LOC_LMTS_PROG_REP' WHERE ICS_PAYLOAD_ID = 'LocalLimitsProgramReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_MASTER_GNRL_PRMT' WHERE ICS_PAYLOAD_ID = 'MasterGeneralPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_NARR_COND_SCHD' WHERE ICS_PAYLOAD_ID = 'NarrativeConditionSchedule';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_PARAM_LMTS' WHERE ICS_PAYLOAD_ID = 'ParameterLimits';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_PRMT_REISSU' WHERE ICS_PAYLOAD_ID = 'PermitReissuance';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_PRMT_FEATR' WHERE ICS_PAYLOAD_ID = 'PermittedFeature';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_PRMT_TERM' WHERE ICS_PAYLOAD_ID = 'PermitTermination';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_PRMT_TRACK_EVT' WHERE ICS_PAYLOAD_ID = 'PermitTrackingEvent';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_POTW_PRMT' WHERE ICS_PAYLOAD_ID = 'POTWPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_PRETR_PERF_SUMM' WHERE ICS_PAYLOAD_ID = 'PretreatmentPerformanceSummary';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_PRETR_PRMT' WHERE ICS_PAYLOAD_ID = 'PretreatmentPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SCHD_EVT_VIOL' WHERE ICS_PAYLOAD_ID = 'ScheduleEventViolation';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SNGL_EVT_VIOL' WHERE ICS_PAYLOAD_ID = 'SingleEventViolation';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SSO_ANNUL_REP' WHERE ICS_PAYLOAD_ID = 'SSOAnnualReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SSO_EVT_REP' WHERE ICS_PAYLOAD_ID = 'SSOEventReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SSO_MONTHLY_EVT_REP' WHERE ICS_PAYLOAD_ID = 'SSOMonthlyEventReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SW_CNST_PRMT' WHERE ICS_PAYLOAD_ID = 'SWConstructionPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SW_EVT_REP' WHERE ICS_PAYLOAD_ID = 'SWEventReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SW_INDST_ANNUL_REP' WHERE ICS_PAYLOAD_ID = 'SWIndustrialAnnualReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SW_INDST_PRMT' WHERE ICS_PAYLOAD_ID = 'SWIndustrialPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SWMS_4_LARGE_PRMT' WHERE ICS_PAYLOAD_ID = 'SWMS4LargePermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SWMS_4_PROG_REP' WHERE ICS_PAYLOAD_ID = 'SWMS4ProgramReport';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_SWMS_4_SMALL_PRMT' WHERE ICS_PAYLOAD_ID = 'SWMS4SmallPermit';
UPDATE ICS_PAYLOAD SET BASE_TABLE_NAME = 'ICS_UNPRMT_FAC' WHERE ICS_PAYLOAD_ID = 'UnpermittedFacility';

commit;

